@mixin mq-pc {
  @media screen and (min-width: #{map-get($breakpoints, md)}px ) {
    @content;
  }
}

@mixin mq-pc--min {
  @media screen and (max-width: #{map-get($breakpoints, xl)-1}px) {
    @content;
  }
}

@mixin mq-tablet {
  @media screen and (min-width: #{map-get($breakpoints, md)}px ) and ( max-width: #{map-get($breakpoints, lg)-1}px ) {
    @content;
  }
}

@mixin mq-sp {
  @media screen and ( max-width: #{map-get($breakpoints, md)-1}px ) {
    @content;
  }
}

@mixin mq-sp--min {
  @media screen and (max-width: #{map-get($breakpoints, sm)-1}px) {
    @content;
  }
}

@mixin keyframes($animation-name: animaton) {
  @keyframes #{$animation-name} {
    @content;
  }
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
}

@mixin animation($animation-name) {
  animation: $animation-name;
  animation-fill-mode: both;
}

@mixin transition($_sec: 0.15) {
  transition: all #{$_sec}s ease-out;
}

@mixin hover-style($_sec: 0.2) {
  transition: opacity #{$_sec}s ease-out 0s,
              background-image  #{$_sec}s ease-out 0s,
              background-color  #{$_sec}s ease-out 0s,
              transform #{$_sec}s ease-out 0s;
  &:hover{
    @content;
  }
}

@mixin img($ext_path,$img_name) {
  $default_path: "../img/";
  background-repeat: no-repeat;
  background-size: 100%;
  background-image: url(#{$default_path}#{$ext_path}/#{$img_name}.png);
}
@mixin img_jpg($ext_path,$img_name) {
  $default_path: "../img/";
  background-repeat: no-repeat;
  background-size: 100%;
  background-image: url(#{$default_path}#{$ext_path}/#{$img_name}.jpg);
}
@mixin img_svg($ext_path,$img_name) {
  $default_path: "../img/";
  background-repeat: no-repeat;
  background-size: 100%;
  background-image: url(#{$default_path}#{$ext_path}/#{$img_name}.svg);
}

@mixin size($width,$height) {
  $w: $width+px;
  width: $w;
  @if $height == auto {
    $h: auto;
    height: $h;
    background-size: 100%;
  } @else {
    $h: $height+px;
    height: $h;
    background-size: 100%;
  }
}

@mixin skil($left_width, $right_width) {
  width: 100%;
  height: 6px;
  background-color: #2285c6;
  border-radius: 50px;
  position: relative;
  &::after{
    content:"";
    width: $left_width;
    height: 100%;
    background-color: #0b293d;
    border-radius: 50px 0 0 50px;
    position: absolute;
  }
  &::before{
    content:"";
    width: $right_width;
    height: 100%;
    background-color: #90c2e2;
    border-radius: 0 50px 50px 0;
    position: absolute;
    right: 0;
  }
}

@mixin change_size_font($maxfont,$minfont) {
  $num1: (768/100)*0.1rem;
  $num2: 100*($maxfont - $minfont) / (980 - 768);
  $num3: $minfont*0.1rem;

  font-size: calc(#{$num3} + ((1vw - #{$num1}) * #{$num2}));
  // XX = ビューポートの最小幅 / 100　のrem変換値
  // YY = 100 * 文字サイズ可変量 / ビューポート可変量
  // ZZ = 最小文字サイズのrem変換値

  // XX = 768 / 100 * 0.1rem
  // YY = 100 * (40 - 24) / (980 - 768)
  // ZZ = 24 * 0.1rem
}
@mixin change_size_font_sp($maxfont,$minfont) {

  $num1: (320/100)*0.1rem;
  $num2: 100*($maxfont - $minfont) / (500 - 320);
  $num3: $minfont*0.1rem;

  font-size: calc(#{$num3} + ((1vw - #{$num1}) * #{$num2}));
}
